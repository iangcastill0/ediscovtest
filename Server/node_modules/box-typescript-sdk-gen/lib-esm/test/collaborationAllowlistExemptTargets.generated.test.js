"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
const utils_js_2 = require("../internal/utils.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testCollaborationAllowlistExemptTargets', async function testCollaborationAllowlistExemptTargets() {
    const exemptTargets = await exports.client.collaborationAllowlistExemptTargets.getCollaborationWhitelistExemptTargets();
    if (!(exemptTargets.entries.length >= 0)) {
        throw new Error('Assertion failed');
    }
    const user = await exports.client.users.createUser({
        name: (0, utils_js_1.getUuid)(),
        login: ''.concat((0, utils_js_1.getUuid)(), '@boxdemo.com'),
        isPlatformAccessOnly: true,
    });
    const newExemptTarget = await exports.client.collaborationAllowlistExemptTargets.createCollaborationWhitelistExemptTarget({
        user: {
            id: user.id,
        },
    });
    if (!((0, utils_js_2.toString)(newExemptTarget.type) ==
        'collaboration_whitelist_exempt_target')) {
        throw new Error('Assertion failed');
    }
    if (!(newExemptTarget.user.id == user.id)) {
        throw new Error('Assertion failed');
    }
    const exemptTarget = await exports.client.collaborationAllowlistExemptTargets.getCollaborationWhitelistExemptTargetById(newExemptTarget.id);
    if (!(exemptTarget.id == newExemptTarget.id)) {
        throw new Error('Assertion failed');
    }
    if (!(exemptTarget.user.id == user.id)) {
        throw new Error('Assertion failed');
    }
    await exports.client.collaborationAllowlistExemptTargets.deleteCollaborationWhitelistExemptTargetById(exemptTarget.id);
    await expect(async () => {
        await exports.client.collaborationAllowlistExemptTargets.getCollaborationWhitelistExemptTargetById(exemptTarget.id);
    }).rejects.toThrow();
    await exports.client.users.deleteUserById(user.id);
});
//# sourceMappingURL=collaborationAllowlistExemptTargets.generated.test.js.map