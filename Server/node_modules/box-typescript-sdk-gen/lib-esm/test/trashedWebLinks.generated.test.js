"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
const utils_js_2 = require("../internal/utils.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testTrashedWebLinks', async function testTrashedWebLinks() {
    const url = 'https://www.box.com';
    const parent = await exports.client.folders.getFolderById('0');
    const name = (0, utils_js_1.getUuid)();
    const description = 'Weblink description';
    const weblink = await exports.client.webLinks.createWebLink({
        url: url,
        parent: { id: parent.id },
        name: name,
        description: description,
    });
    await exports.client.webLinks.deleteWebLinkById(weblink.id);
    const fromTrash = await exports.client.trashedWebLinks.getTrashedWebLinkById(weblink.id);
    if (!(fromTrash.id == weblink.id)) {
        throw new Error('Assertion failed');
    }
    if (!(fromTrash.name == weblink.name)) {
        throw new Error('Assertion failed');
    }
    const fromApiAfterTrashed = await exports.client.webLinks.getWebLinkById(weblink.id);
    if (!((0, utils_js_2.toString)(fromApiAfterTrashed.itemStatus) == 'trashed')) {
        throw new Error('Assertion failed');
    }
    const restoredWeblink = await exports.client.trashedWebLinks.restoreWeblinkFromTrash(weblink.id);
    const fromApi = await exports.client.webLinks.getWebLinkById(weblink.id);
    if (!(restoredWeblink.id == fromApi.id)) {
        throw new Error('Assertion failed');
    }
    if (!(restoredWeblink.name == fromApi.name)) {
        throw new Error('Assertion failed');
    }
    await exports.client.webLinks.deleteWebLinkById(weblink.id);
    await exports.client.trashedWebLinks.deleteTrashedWebLinkById(weblink.id);
    await expect(async () => {
        await exports.client.trashedWebLinks.getTrashedWebLinkById(weblink.id);
    }).rejects.toThrow();
});
//# sourceMappingURL=trashedWebLinks.generated.test.js.map