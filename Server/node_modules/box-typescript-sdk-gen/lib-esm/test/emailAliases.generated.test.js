"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testEmailAliases', async function testEmailAliases() {
    const newUserName = (0, utils_js_1.getUuid)();
    const newUserLogin = ''.concat((0, utils_js_1.getUuid)(), '@boxdemo.com');
    const newUser = await exports.client.users.createUser({
        name: newUserName,
        login: newUserLogin,
    });
    const aliases = await exports.client.emailAliases.getUserEmailAliases(newUser.id);
    if (!(aliases.totalCount == 0)) {
        throw new Error('Assertion failed');
    }
    const newAliasEmail = ''.concat(newUser.id, '@boxdemo.com');
    const newAlias = await exports.client.emailAliases.createUserEmailAlias(newUser.id, { email: newAliasEmail });
    const updatedAliases = await exports.client.emailAliases.getUserEmailAliases(newUser.id);
    if (!(updatedAliases.totalCount == 1)) {
        throw new Error('Assertion failed');
    }
    if (!(updatedAliases.entries[0].email == newAliasEmail)) {
        throw new Error('Assertion failed');
    }
    await exports.client.emailAliases.deleteUserEmailAliasById(newUser.id, newAlias.id);
    const finalAliases = await exports.client.emailAliases.getUserEmailAliases(newUser.id);
    if (!(finalAliases.totalCount == 0)) {
        throw new Error('Assertion failed');
    }
    await exports.client.users.deleteUserById(newUser.id);
});
//# sourceMappingURL=emailAliases.generated.test.js.map