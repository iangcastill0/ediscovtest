"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const commons_generated_js_1 = require("./commons.generated.js");
const commons_generated_js_2 = require("./commons.generated.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testFolderLocks', async function testFolderLocks() {
    const folder = await (0, commons_generated_js_2.createNewFolder)();
    const folderLocks = await exports.client.folderLocks.getFolderLocks({
        folderId: folder.id,
    });
    if (!(folderLocks.entries.length == 0)) {
        throw new Error('Assertion failed');
    }
    const folderLock = await exports.client.folderLocks.createFolderLock({
        folder: {
            id: folder.id,
            type: 'folder',
        },
        lockedOperations: {
            move: true,
            delete: true,
        },
    });
    if (!(folderLock.folder.id == folder.id)) {
        throw new Error('Assertion failed');
    }
    if (!(folderLock.lockedOperations.move == true)) {
        throw new Error('Assertion failed');
    }
    if (!(folderLock.lockedOperations.delete == true)) {
        throw new Error('Assertion failed');
    }
    await exports.client.folderLocks.deleteFolderLockById(folderLock.id);
    await expect(async () => {
        await exports.client.folderLocks.deleteFolderLockById(folderLock.id);
    }).rejects.toThrow();
    const newFolderLocks = await exports.client.folderLocks.getFolderLocks({
        folderId: folder.id,
    });
    if (!(newFolderLocks.entries.length == 0)) {
        throw new Error('Assertion failed');
    }
    await exports.client.folders.deleteFolderById(folder.id);
});
//# sourceMappingURL=folderLocks.generated.test.js.map