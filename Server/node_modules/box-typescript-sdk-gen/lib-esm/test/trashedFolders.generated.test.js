"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testTrashedFolders', async function testTrashedFolders() {
    const folder = await exports.client.folders.createFolder({
        name: (0, utils_js_1.getUuid)(),
        parent: { id: '0' },
    });
    await exports.client.folders.deleteFolderById(folder.id);
    const fromTrash = await exports.client.trashedFolders.getTrashedFolderById(folder.id);
    if (!(fromTrash.id == folder.id)) {
        throw new Error('Assertion failed');
    }
    if (!(fromTrash.name == folder.name)) {
        throw new Error('Assertion failed');
    }
    await expect(async () => {
        await exports.client.folders.getFolderById(folder.id);
    }).rejects.toThrow();
    const restoredFolder = await exports.client.trashedFolders.restoreFolderFromTrash(folder.id);
    const fromApi = await exports.client.folders.getFolderById(folder.id);
    if (!(restoredFolder.id == fromApi.id)) {
        throw new Error('Assertion failed');
    }
    if (!(restoredFolder.name == fromApi.name)) {
        throw new Error('Assertion failed');
    }
    await exports.client.folders.deleteFolderById(folder.id);
    await exports.client.trashedFolders.deleteTrashedFolderById(folder.id);
    await expect(async () => {
        await exports.client.trashedFolders.getTrashedFolderById(folder.id);
    }).rejects.toThrow();
});
//# sourceMappingURL=trashedFolders.generated.test.js.map