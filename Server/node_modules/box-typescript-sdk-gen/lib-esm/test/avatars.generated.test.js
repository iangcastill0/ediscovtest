"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const utils_js_2 = require("../internal/utils.js");
const utils_js_3 = require("../internal/utils.js");
const utils_js_4 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testAvatars', async function testAvatars() {
    const user = await exports.client.users.getUserMe();
    const createdAvatar = await exports.client.avatars.createUserAvatar(user.id, {
        pic: (0, utils_js_4.decodeBase64ByteStream)('iVBORw0KGgoAAAANSUhEUgAAAQAAAAEAAQMAAABmvDolAAAAA1BMVEW10NBjBBbqAAAAH0lEQVRoge3BAQ0AAADCoPdPbQ43oAAAAAAAAAAAvg0hAAABmmDh1QAAAABJRU5ErkJggg=='),
        picContentType: 'image/png',
        picFileName: 'avatar.png',
    });
    if (!!(createdAvatar.picUrls.small == void 0)) {
        throw new Error('Assertion failed');
    }
    if (!!(createdAvatar.picUrls.large == void 0)) {
        throw new Error('Assertion failed');
    }
    if (!!(createdAvatar.picUrls.preview == void 0)) {
        throw new Error('Assertion failed');
    }
    const response = await exports.client.avatars.getUserAvatar(user.id);
    if (!((0, utils_js_1.bufferEquals)(await (0, utils_js_2.readByteStream)(response), (0, utils_js_3.generateByteBuffer)(0)) ==
        false)) {
        throw new Error('Assertion failed');
    }
    await exports.client.avatars.deleteUserAvatar(user.id);
    await expect(async () => {
        await exports.client.avatars.getUserAvatar(user.id);
    }).rejects.toThrow();
});
//# sourceMappingURL=avatars.generated.test.js.map