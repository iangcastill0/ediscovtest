"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
const utils_js_2 = require("../internal/utils.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('test_get_users', async function test_get_users() {
    const users = await exports.client.users.getUsers();
    if (!(users.totalCount >= 0)) {
        throw new Error('Assertion failed');
    }
});
test('test_get_user_me', async function test_get_user_me() {
    const currentUser = await exports.client.users.getUserMe();
    if (!((0, utils_js_2.toString)(currentUser.type) == 'user')) {
        throw new Error('Assertion failed');
    }
});
test('test_create_update_get_delete_user', async function test_create_update_get_delete_user() {
    const userName = (0, utils_js_1.getUuid)();
    const userLogin = ''.concat((0, utils_js_1.getUuid)(), '@gmail.com');
    const user = await exports.client.users.createUser({
        name: userName,
        login: userLogin,
        isPlatformAccessOnly: true,
    });
    if (!(user.name == userName)) {
        throw new Error('Assertion failed');
    }
    const userById = await exports.client.users.getUserById(user.id);
    if (!(userById.id == user.id)) {
        throw new Error('Assertion failed');
    }
    const updatedUserName = (0, utils_js_1.getUuid)();
    const updatedUser = await exports.client.users.updateUserById(user.id, {
        requestBody: { name: updatedUserName },
    });
    if (!(updatedUser.name == updatedUserName)) {
        throw new Error('Assertion failed');
    }
    await exports.client.users.deleteUserById(user.id);
});
//# sourceMappingURL=users.generated.test.js.map