"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
const utils_js_2 = require("../internal/utils.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testCollections', async function testCollections() {
    const collections = await exports.client.collections.getCollections();
    const favouriteCollection = await exports.client.collections.getCollectionById(collections.entries[0].id);
    if (!((0, utils_js_2.toString)(favouriteCollection.type) == 'collection')) {
        throw new Error('Assertion failed');
    }
    if (!((0, utils_js_2.toString)(favouriteCollection.collectionType) == 'favorites')) {
        throw new Error('Assertion failed');
    }
    const collectionItems = await exports.client.collections.getCollectionItems(favouriteCollection.id);
    const folder = await exports.client.folders.createFolder({
        name: (0, utils_js_1.getUuid)(),
        parent: { id: '0' },
    });
    await exports.client.folders.updateFolderById(folder.id, {
        requestBody: {
            collections: [
                {
                    id: favouriteCollection.id,
                },
            ],
        },
    });
    const collectionItemsAfterUpdate = await exports.client.collections.getCollectionItems(favouriteCollection.id);
    if (!(collectionItemsAfterUpdate.totalCount > 0)) {
        throw new Error('Assertion failed');
    }
    await exports.client.folders.updateFolderById(folder.id, {
        requestBody: { collections: [] },
    });
    await exports.client.folders.deleteFolderById(folder.id);
});
//# sourceMappingURL=collections.generated.test.js.map