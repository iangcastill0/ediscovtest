"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.client = void 0;
const utils_js_1 = require("../internal/utils.js");
const commons_generated_js_1 = require("./commons.generated.js");
const utils_js_2 = require("../internal/utils.js");
exports.client = (0, commons_generated_js_1.getDefaultClient)();
test('testMemberships', async function testMemberships() {
    const user = await exports.client.users.createUser({
        name: (0, utils_js_1.getUuid)(),
        login: ''.concat((0, utils_js_1.getUuid)(), '@boxdemo.com'),
    });
    const userMemberships = await exports.client.memberships.getUserMemberships(user.id);
    if (!(userMemberships.totalCount == 0)) {
        throw new Error('Assertion failed');
    }
    const group = await exports.client.groups.createGroup({
        name: (0, utils_js_1.getUuid)(),
    });
    const groupMemberships = await exports.client.memberships.getGroupMemberships(group.id);
    if (!(groupMemberships.totalCount == 0)) {
        throw new Error('Assertion failed');
    }
    const groupMembership = await exports.client.memberships.createGroupMembership({
        user: { id: user.id },
        group: {
            id: group.id,
        },
    });
    if (!(groupMembership.user.id == user.id)) {
        throw new Error('Assertion failed');
    }
    if (!(groupMembership.group.id == group.id)) {
        throw new Error('Assertion failed');
    }
    if (!((0, utils_js_2.toString)(groupMembership.role) == 'member')) {
        throw new Error('Assertion failed');
    }
    const getGroupMembership = await exports.client.memberships.getGroupMembershipById(groupMembership.id);
    if (!(getGroupMembership.id == groupMembership.id)) {
        throw new Error('Assertion failed');
    }
    const updatedGroupMembership = await exports.client.memberships.updateGroupMembershipById(groupMembership.id, {
        requestBody: {
            role: 'admin',
        },
    });
    if (!(updatedGroupMembership.id == groupMembership.id)) {
        throw new Error('Assertion failed');
    }
    if (!((0, utils_js_2.toString)(updatedGroupMembership.role) == 'admin')) {
        throw new Error('Assertion failed');
    }
    await exports.client.memberships.deleteGroupMembershipById(groupMembership.id);
    await expect(async () => {
        await exports.client.memberships.getGroupMembershipById(groupMembership.id);
    }).rejects.toThrow();
    await exports.client.groups.deleteGroupById(group.id);
    await exports.client.users.deleteUserById(user.id);
});
//# sourceMappingURL=memberships.generated.test.js.map